p <- p + geom_linerange(x = qnorm(pnorm(285 - 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 21, lmp.mean, lmp.sd), color = "green")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 21, lmp.mean, lmp.sd), color = "green")
p <- p + scale_x_continuous(breaks = seq(257, 313, by = 7), minor_breaks = NULL)
p <- p + geom_ribbon(ymin = 0, ymax = 0.01)
p
p <- ggplot(midata, aes(x = lmp.x, y = lmp.xd)) + geom_line()
#Blue - Probability +/- 7 days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 7, lmp.mean, lmp.sd), color = "steelblue")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 7, lmp.mean, lmp.sd), color = "steelblue")
#Red - Probability +/- 14  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 14, lmp.mean, lmp.sd), color = "red")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 14, lmp.mean, lmp.sd), color = "red")
#Red - Probability +/- 21  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 21, lmp.mean, lmp.sd), color = "green")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 21, lmp.mean, lmp.sd), color = "green")
p <- p + scale_x_continuous(breaks = seq(257, 313, by = 7), minor_breaks = NULL)
p <- p + geom_ribbon(aes(ymin = lmp.x), ymax = 0.01)
p
#Probability within +/- 7 days
p <- ggplot(midata, aes(x = lmp.x, y = lmp.xd)) + geom_line()
#Blue - Probability +/- 7 days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 7, lmp.mean, lmp.sd), color = "steelblue")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 7, lmp.mean, lmp.sd), color = "steelblue")
#Red - Probability +/- 14  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 14, lmp.mean, lmp.sd), color = "red")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 14, lmp.mean, lmp.sd), color = "red")
#Red - Probability +/- 21  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 21, lmp.mean, lmp.sd), color = "green")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 21, lmp.mean, lmp.sd), color = "green")
p <- p + scale_x_continuous(breaks = seq(257, 313, by = 7), minor_breaks = NULL)
p <- p + geom_ribbon(aes(ymin = lmp.xd), ymax = 0.01)
p
p <- ggplot(midata, aes(x = lmp.x, y = lmp.xd)) + geom_line()
#Blue - Probability +/- 7 days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 7, lmp.mean, lmp.sd), color = "steelblue")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 7, lmp.mean, lmp.sd), color = "steelblue")
#Red - Probability +/- 14  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 14, lmp.mean, lmp.sd), color = "red")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 14, lmp.mean, lmp.sd), color = "red")
#Red - Probability +/- 21  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 21, lmp.mean, lmp.sd), color = "green")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 21, lmp.mean, lmp.sd), color = "green")
p <- p + scale_x_continuous(breaks = seq(257, 313, by = 7), minor_breaks = NULL)
p <- p + geom_ribbon(ymin = 0, aes(ymax = lmp.xd))
p
p <- ggplot(midata, aes(x = lmp.x, y = lmp.xd)) + geom_line()
#Blue - Probability +/- 7 days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 7, lmp.mean, lmp.sd), color = "steelblue")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 7, lmp.mean, lmp.sd), color = "steelblue")
#Red - Probability +/- 14  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 14, lmp.mean, lmp.sd), color = "red")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 14, lmp.mean, lmp.sd), color = "red")
#Red - Probability +/- 21  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 21, lmp.mean, lmp.sd), color = "green")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 21, lmp.mean, lmp.sd), color = "green")
p <- p + scale_x_continuous(breaks = seq(257, 313, by = 7), minor_breaks = NULL)
p <- p + geom_ribbon(ymin = 0, aes(y = lmp.xd))
p
p <- ggplot(midata, aes(x = lmp.x, y = lmp.xd)) + geom_line()
#Blue - Probability +/- 7 days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 7, lmp.mean, lmp.sd), color = "steelblue")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 7, lmp.mean, lmp.sd), color = "steelblue")
#Red - Probability +/- 14  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 14, lmp.mean, lmp.sd), color = "red")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 14, lmp.mean, lmp.sd), color = "red")
#Red - Probability +/- 21  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 21, lmp.mean, lmp.sd), color = "green")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 21, lmp.mean, lmp.sd), color = "green")
p <- p + scale_x_continuous(breaks = seq(257, 313, by = 7), minor_breaks = NULL)
p <- p + geom_ribbon(ymin = 0, ymax = 0.01, aes(y = lmp.xd))
p
p <- ggplot(midata, aes(x = lmp.x, y = lmp.xd)) + geom_line()
#Blue - Probability +/- 7 days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 7, lmp.mean, lmp.sd), color = "steelblue")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 7, lmp.mean, lmp.sd), color = "steelblue")
#Red - Probability +/- 14  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 14, lmp.mean, lmp.sd), color = "red")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 14, lmp.mean, lmp.sd), color = "red")
#Red - Probability +/- 21  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 21, lmp.mean, lmp.sd), color = "green")
p <- p + scale_x_continuous(breaks = seq(257, 313, by = 7), minor_breaks = NULL)
p <- p + geom_linerange(x = qnorm(pnorm(285 + 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 21, lmp.mean, lmp.sd), color = "green")
p <- p + geom_ribbon(ymin = 0, ymax = 0.01, aes(y = lmp.xd), xmax = 285)
p
library(ggplot2)
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
diamonds
d <- diamonds
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
p
quartz()
p
install.packages("plotly")
library(plotly)
ggplotly(p)
quartz()
ggplotly(p)
library(plotly)
p <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = plotly_POST(p, filename="scatter/basic")
chart_link
ggplotly(p)
p
p <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)
p
p <- plot_ly(data = iris, x = Sepal.Length, y = Petal.Length)
p
library(plotly)
p <- plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length,
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2))) %>%
layout(title = 'Styled Scatter',
yaxis = list(zeroline = FALSE),
xaxis = list(zeroline = FALSE))
p
library(plotly)
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
p
library(plotly)
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
p <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
p <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
p
library(plotly)
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
p <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
library(plotly)
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
p
library(plotly)
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
p <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
p <- plot_ly(data, x = Animals, y = SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
p
library(plotly)
x <- c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012)
roW <- c(219, 146, 112, 127, 124, 180, 236, 207, 236, 263, 350, 430, 474, 526, 488, 537, 500, 439)
China <- c(16, 13, 10, 11, 28, 37, 43, 55, 56, 88, 105, 156, 270, 299, 340, 403, 549, 499)
data <- data.frame(x, roW, China)
p <- plot_ly(data, x = ~x, y = ~roW, type = 'bar', name = 'Rest of the World',
marker = list(color = 'rgb(55, 83, 109)')) %>%
add_trace(y = ~China, name = 'China', marker = list(color = 'rgb(26, 118, 255)')) %>%
layout(title = 'US Export of Plastic Scrap',
xaxis = list(
title = "",
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
yaxis = list(
title = 'USD (millions)',
titlefont = list(
size = 16,
color = 'rgb(107, 107, 107)'),
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
legend = list(x = 0, y = 1, bgcolor = 'rgba(255, 255, 255, 0)', bordercolor = 'rgba(255, 255, 255, 0)'),
barmode = 'group', bargap = 0.15, bargroupgap = 0.1)
p
$mode
mode
dev.off()
library(plotly)
x <- c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012)
roW <- c(219, 146, 112, 127, 124, 180, 236, 207, 236, 263, 350, 430, 474, 526, 488, 537, 500, 439)
China <- c(16, 13, 10, 11, 28, 37, 43, 55, 56, 88, 105, 156, 270, 299, 340, 403, 549, 499)
data <- data.frame(x, roW, China)
p <- plot_ly(data, x = ~x, y = ~roW, type = 'bar', name = 'Rest of the World',
marker = list(color = 'rgb(55, 83, 109)')) %>%
add_trace(y = ~China, name = 'China', marker = list(color = 'rgb(26, 118, 255)')) %>%
layout(title = 'US Export of Plastic Scrap',
xaxis = list(
title = "",
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
yaxis = list(
title = 'USD (millions)',
titlefont = list(
size = 16,
color = 'rgb(107, 107, 107)'),
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
legend = list(x = 0, y = 1, bgcolor = 'rgba(255, 255, 255, 0)', bordercolor = 'rgba(255, 255, 255, 0)'),
barmode = 'group', bargap = 0.15, bargroupgap = 0.1)
p
p
devtools::install_github("plotly/R-api")
library(plotly)
library(plotly)
x <- c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012)
roW <- c(219, 146, 112, 127, 124, 180, 236, 207, 236, 263, 350, 430, 474, 526, 488, 537, 500, 439)
China <- c(16, 13, 10, 11, 28, 37, 43, 55, 56, 88, 105, 156, 270, 299, 340, 403, 549, 499)
data <- data.frame(x, roW, China)
p <- plot_ly(data, x = ~x, y = ~roW, type = 'bar', name = 'Rest of the World',
marker = list(color = 'rgb(55, 83, 109)')) %>%
add_trace(y = ~China, name = 'China', marker = list(color = 'rgb(26, 118, 255)')) %>%
layout(title = 'US Export of Plastic Scrap',
xaxis = list(
title = "",
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
yaxis = list(
title = 'USD (millions)',
titlefont = list(
size = 16,
color = 'rgb(107, 107, 107)'),
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
legend = list(x = 0, y = 1, bgcolor = 'rgba(255, 255, 255, 0)', bordercolor = 'rgba(255, 255, 255, 0)'),
barmode = 'group', bargap = 0.15, bargroupgap = 0.1)
p
print(p)
plot(p)
p
str(p)
ggplotly(p)
library(ggplot2)
library(plotly)
ggplotly(p)
plot(p)
installed.packages("plotly")
install.packages("plotly")
sessionInfo()
library(plotly)
x <- c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012)
roW <- c(219, 146, 112, 127, 124, 180, 236, 207, 236, 263, 350, 430, 474, 526, 488, 537, 500, 439)
China <- c(16, 13, 10, 11, 28, 37, 43, 55, 56, 88, 105, 156, 270, 299, 340, 403, 549, 499)
data <- data.frame(x, roW, China)
p <- plot_ly(data, x = ~x, y = ~roW, type = 'bar', name = 'Rest of the World',
marker = list(color = 'rgb(55, 83, 109)')) %>%
add_trace(y = ~China, name = 'China', marker = list(color = 'rgb(26, 118, 255)')) %>%
layout(title = 'US Export of Plastic Scrap',
xaxis = list(
title = "",
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
yaxis = list(
title = 'USD (millions)',
titlefont = list(
size = 16,
color = 'rgb(107, 107, 107)'),
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
legend = list(x = 0, y = 1, bgcolor = 'rgba(255, 255, 255, 0)', bordercolor = 'rgba(255, 255, 255, 0)'),
barmode = 'group', bargap = 0.15, bargroupgap = 0.1)
p
remove.packages("plotly")
devtools::install_github("ropensci/plotly")
"htmltools" %in% installed.packages()
install.packages("htmltools")
devtools::install_github("ropensci/plotly")
install.packages("htmltools", type = "source")
devtools::install_github("ropensci/plotly")
sessionInfo()
devtools::install_github("ropensci/plotly")
library(dplyr)
update.packages()
install.packages("devtools")
devtools::install_github("ropensci/plotly")
library(plotly)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity))
x <- c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012)
roW <- c(219, 146, 112, 127, 124, 180, 236, 207, 236, 263, 350, 430, 474, 526, 488, 537, 500, 439)
China <- c(16, 13, 10, 11, 28, 37, 43, 55, 56, 88, 105, 156, 270, 299, 340, 403, 549, 499)
data <- data.frame(x, roW, China)
p <- plot_ly(data, x = ~x, y = ~roW, type = 'bar', name = 'Rest of the World',
marker = list(color = 'rgb(55, 83, 109)')) %>%
add_trace(y = ~China, name = 'China', marker = list(color = 'rgb(26, 118, 255)')) %>%
layout(title = 'US Export of Plastic Scrap',
xaxis = list(
title = "",
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
yaxis = list(
title = 'USD (millions)',
titlefont = list(
size = 16,
color = 'rgb(107, 107, 107)'),
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
legend = list(x = 0, y = 1, bgcolor = 'rgba(255, 255, 255, 0)', bordercolor = 'rgba(255, 255, 255, 0)'),
barmode = 'group', bargap = 0.15, bargroupgap = 0.1)
p
p <- plot_ly(data, x = ~x, y = ~roW, type = 'bar', name = 'Rest of the World',
marker = list(color = 'rgb(55, 83, 109)')) %>%
add_trace(y = ~China, name = 'China', marker = list(color = 'rgb(26, 118, 255)')) %>%
layout(title = 'US Export of Plastic Scrap',
xaxis = list(
title = "",
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
yaxis = list(
title = 'USD (millions)',
titlefont = list(
size = 16,
color = 'rgb(107, 107, 107)'),
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
legend = list(x = 0, y = 1, bgcolor = 'rgba(255, 255, 255, 0)', bordercolor = 'rgba(255, 255, 255, 0)'),
barmode = 'group', bargap = 0.15)
p
p <- plot_ly(data, x = ~x, y = ~roW, type = 'bar', name = 'Rest of the World',
marker = list(color = 'rgb(55, 83, 109)')) %>%
add_trace(y = ~China, name = 'China', marker = list(color = 'rgb(26, 118, 255)')) %>%
layout(title = 'US Export of Plastic Scrap',
xaxis = list(
title = "",
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
yaxis = list(
title = 'USD (millions)',
titlefont = list(
size = 16,
color = 'rgb(107, 107, 107)'),
tickfont = list(
size = 14,
color = 'rgb(107, 107, 107)')),
legend = list(x = 0, y = 1, bgcolor = 'rgba(255, 255, 255, 0)', bordercolor = 'rgba(255, 255, 255, 0)'),
barmode = 'group', bargap = 0.15, bargroupgap = 0.1)
p
library(ggplot2)
lmp.mean = 285
lmp.sd = 14
lmp.x = seq(-4, 4, length = 100) * lmp.sd + lmp.mean
lmp.xd = dnorm(lmp.x, lmp.mean, lmp.sd)
midata <- data.frame(lmp.x = lmp.x, lmp.xd = lmp.xd)
dnorm(285, lmp.mean, lmp.sd)
pnorm(285, lmp.mean, lmp.sd)
qnorm(0.5, lmp.mean, lmp.sd)
qnorm(pnorm(285, lmp.mean, lmp.sd), lmp.mean, lmp.sd)
p <- ggplot(midata, aes(x = lmp.x, y = lmp.xd)) + geom_line()
#Blue - Probability +/- 7 days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 7, lmp.mean, lmp.sd), color = "steelblue")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 7, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 7, lmp.mean, lmp.sd), color = "steelblue")
#Red - Probability +/- 14  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 14, lmp.mean, lmp.sd), color = "red")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 14, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 14, lmp.mean, lmp.sd), color = "red")
#Red - Probability +/- 21  days
p <- p + geom_linerange(x = qnorm(pnorm(285 - 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 - 21, lmp.mean, lmp.sd), color = "green")
p <- p + geom_linerange(x = qnorm(pnorm(285 + 21, lmp.mean, lmp.sd), lmp.mean, lmp.sd), ymin = 0, ymax = dnorm(285 + 21, lmp.mean, lmp.sd), color = "green")
p <- p + scale_x_continuous(breaks = seq(257, 313, by = 7), minor_breaks = NULL)
#p <- p + geom_ribbon(ymin = 0, ymax = 0.01, aes(y = lmp.xd), xmax = 285)
p
#Probability within +/- 7 days
pnorm(285 - 7, lmp.mean, lmp.sd, lower.tail = F) - pnorm(285 - 7, lmp.mean, lmp.sd)
#Probability outside +/- 7 days
1 - (pnorm(285 - 7, lmp.mean, lmp.sd, lower.tail = F) - pnorm(285 - 7, lmp.mean, lmp.sd))
#Probability within +/- 14 days
pnorm(285 - 14, lmp.mean, lmp.sd, lower.tail = F) - pnorm(285 - 14, lmp.mean, lmp.sd)
#Probability outside +/- 14 days
1 - (pnorm(285 - 14, lmp.mean, lmp.sd, lower.tail = F) - pnorm(285 - 14, lmp.mean, lmp.sd))
#Probability within +/- 21 days
pnorm(285 - 21, lmp.mean, lmp.sd, lower.tail = F) - pnorm(285 - 21, lmp.mean, lmp.sd)
#Probability outside +/- 21 days
1 - (pnorm(285 - 21, lmp.mean, lmp.sd, lower.tail = F) - pnorm(285 - 21, lmp.mean, lmp.sd))
library(plotly)
ggplotly(p)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity))
sample(10, 2)
sample(10, 2)
library(plotly)
set.seed(100)
plot_ly(diamonds, x = ~carat, y = ~price, color = ~carat,
size = ~carat, text = ~paste("Clarity: ", clarity))
nrow(diamonds)
data(diamonds)
data(diamonds)
data(diamonds)
getwd()
setwd("~/shiny_apps")
dir("~")
setwd("~/Documents")
dir()
setwd("~/Documents/shiny_apps")
setwd("~/Documents/shiny_apps/first_env")
install.packages("shiny")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?a
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?actionButton
runApp()
?submitButton
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
runApp("first_env", display.mode = "reactive")
runApp("first_env", display.mode = "showcase")
runApp("../first_env", display.mode = "showcase")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
